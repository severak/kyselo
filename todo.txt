TODO

- nezobrazovat NSFW obrázky v RSS
- vyměnit logo a výchozí obrázek skupin
- kešování!!!
- thumbnaily přepsat velikosti na 128 a 64

- CSSko pro mobily - všude bulma, všude title, oživit zase wysiwyg
- jména do seznam přátel 
- text 
- kešování
- komentáře
- notifikace
- mentions
- při registraci stáhnout gravatar ale udělat jeho mirror
- export části DB
- napsat Privacy policy a implementovat mazání profilů

BUGY

- neukazují se skupiny, které nemají členy
- vyřešit velikost uploadu

PLÁN

- reposty z loforo
- friends/followers lists
- bonzovací tlačítko
- lepší share
- vlastní vzhled blogů
- optimalizace pro velký provoz
- scrapování lofora a souperu (možná i mastodonu)
- postování URL vespod
- notifikace
- komentáře
- mentions
- nahrávání mp4 / mp3

VIZE

- how not to became /pol
- chronologická timeline
- žádné dark patterns nebo dopamine microdosage in social media
- nonprofit družstvo
- RSSkový klient
- porn
- reactions obrázky

- turbolinks?
- security log
- change log
- updatovat text repostů?

* * *

STATS:

select count(*) from blogs where is_group=0;

SELECT name, posts_count, count(*)
    FROM blogs b
    INNER JOIN (SELECT blog_id, COUNT(*) AS posts_count FROM posts GROUP BY blog_id) AS m ON m.blog_id=b.id
    WHERE b.is_group=0 AND b.is_visible
    ORDER BY posts_count DESC;

select date(datetime,"unixepoch"), count(*)
from posts
group by date(datetime,"unixepoch")

-- poslední aktivita uživatelů:
select name, strftime('%Y-%m-%d %H:%M:%S', datetime(dt, 'unixepoch')) as last_seen
from (
select b.name as name, max(datetime) as dt
from blogs b
inner join posts p on p.author_id=b.id
where b.is_group=0
group by name
) as derived
order by dt desc

---

some tips from someone who host high traffic services for living -- your code always sends Set-Cookie and no-cache, this will really hammer your system. You should send set-cookie for logged users, so you can add microcaching (like up to 3s). Also, switching to some API rather than generating full html will help you a lot, as you would be able to cache posts on API evne for logged users
or even have javascript+api to handle logged in users, while whole HTML being the same for logged in and not logged users
this allows you to do harmless 3s microcaching and handle 100x more traffic
also, when you put cloudflare in front of your service without cookies and with cache, cloudflare can also handle lots of traffic for you
having javascript add the tiny 'repost' button would mean html stays the same